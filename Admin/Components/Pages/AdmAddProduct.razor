@page "/products/add"
@using Customer.DTOs
@using Customer.Services
@inject ProductSVC ProductService
@inject CategorySVC CategoryService
@inject NavigationManager NavigationManager
@inject NotifySVC NotifyService

<h3>Create Product</h3>

<div class="row">
    <div class="col-md-12 m-b-30">
        <div class="d-block d-sm-flex flex-nowrap align-items-center">
            <div class="page-title mb-2 mb-sm-0">
                <h1>Create Product</h1>
            </div>
        </div>
    </div>
</div>

<div class="form-group mb-3">
    <a href="products" class="tabledit-edit-button btn btn-danger">
        Back To List
    </a>
</div>


<EditForm Model="@product" OnValidSubmit="CreateProduct" FormName="cproduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                <label for="productName">Name</label>
                <InputText class="form-control" id="productName" @bind-Value="product.Name" />
                <ValidationMessage For="@(() => product.Name)" />
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="productPrice">Price</label>
                <InputNumber class="form-control" id="productPrice" @bind-Value="product.UnitPrice" />
                <ValidationMessage For="@(() => product.UnitPrice)" />
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="productDiscount">Percent Discount</label>
                <InputNumber class="form-control" id="productDiscount" @bind-Value="product.PercentDiscount" />
                <ValidationMessage For="@(() => product.PercentDiscount)" />
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="productHardDiscount">Hard Discount</label>
                <InputNumber class="form-control" id="productHardDiscount" @bind-Value="product.HardDiscount" />
                <ValidationMessage For="@(() => product.HardDiscount)" />
            </div>
        </div>
    </div>

    <div class="form-group">
        <label for="productDescription">Description</label>
        <InputTextArea class="form-control" id="productDescription" @bind-Value="product.Description" />
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="form-group">
                <label for="productIsActive">Status</label>
                <InputRadioGroup class="form-control" id="productIsActive" @bind-Value="product.IsAvailable">
                    <InputRadio Value="true" /> Active
                    <InputRadio Value="false" /> Deactive
                </InputRadioGroup>
            </div>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-12">
            <div class="form-group">
                <label for="category-id">Category</label>
                <InputSelect class="form-control" id="category-id" @bind-Value="product.CategoryId">
                    <option value="">Select category</option>
                    @if (categories != null)
                    {
                        foreach (var category in categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    }
                </InputSelect>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-success">Create</button>
</EditForm>


@code {
    private ProductDTO product = new ProductDTO();
    private IEnumerable<CategoryDTO> categories;

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetAllValidAsync();
    }

    private async Task CreateProduct()
    {
        await NotifyService.Notify("Create");
    }
}
