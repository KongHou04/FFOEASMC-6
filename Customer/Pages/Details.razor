@page "/details/{ProductId:guid?}"
@using Customer.DTOs
@using Customer.Services
@inject ProductSVC productSVC
@inject ImageSVC imageSVC
@inject CartSVC cartSVC

<PageTitle>Details</PageTitle>

<div class="container" style="padding-top: 50px; padding-bottom: 50px">
    @if(Product == null)
    {
        <h2>Product does not exist !</h2>
    }
    else
    {
        <div class="row gx-lg-5 gy-5">
            <div class="col-lg-5">
                <div>
                    <img class="img-fit-cover rounded-1" src="@imageSVC.GetProductImg(Product.Image)" alt="">
                </div>
            </div>
            <div class="col-lg-7">
                <div class="px-4 py-3 bg-body-tertiary rounded-1">
                    <h2 class="text-uppercase fw-bold mb-4">@Product.Name</h2>
                    <h5 class="text-secondary mb-4">@Product.Description</h5>
                    <h5 class="mb-4 text-danger">
                        @if (Product.PercentDiscount != 0)
                        {
                            <span>@Product.PercentDiscount %</span>
                            @if(Product.HardDiscount != 0)
                            {
                                <span> and </span>
                            }
                        }
                        @if (Product.HardDiscount != 0)
                        {
                            <span>@Product.HardDiscount $</span>
                        }
                        @if (Product.PercentDiscount != 0 || Product.HardDiscount != 0)
                        {
                            <span> on discount</span>
                        }
                    </h5>
                    <div class="mb-4">
                        <span class="fs-4 text-danger">@productSVC.CaculteSellingUnitPrice(Product) $</span>
                        <span class="ms-2 text-decoration-line-through">@Product.UnitPrice $</span>
                    </div>
                    <div>
                        <button class="btn rounded-1 btn-lg px-4 btn-success" @onclick="async () => await cartSVC.AddToCartAsync(Product.Id)">Add to Cart</button>
                        <button class="ms-3 btn rounded-1 btn-lg px-4 btn-danger">Add to Favorites List</button>
                    </div>
                </div>
            </div>
        </div>

    }
</div>

@if(RandomProduct != null && RandomProduct.Count() != 0)
{
    <div class="container border-top" style="padding-top: 50px; padding-bottom: 80px;">
        <div class="" style="margin-bottom: 55px;">
            <h3 class="text-uppercase fw-bold">Random dishes you may like</h3>
        </div>
        <div>
            <div class="row gy-5">
                @foreach (var product in RandomProduct.OrderBy(p => p.Name))
                {
                    <div class="col-lg-4">
                        <div class="card overflow-hidden text-decoration-none cs-pointer">
                            <div class="card-img position-relative">
                                <a href="details/@product.Id">
                                    <img class="img-fit-width" style="max-height: 250px" src="@imageSVC.GetProductImg(product.Image)" alt="@product.Name">
                                </a>
                                <div class="position-absolute text-white"
                                     style="top: 0px; right: 0px">
                                    @if (product.HardDiscount != 0)
                                    {
                                        <div class="bg-danger rounded-1 px-4 py-1" style="margin-top: 10px; margin-right: 10px">
                                            @product.HardDiscount $
                                        </div>
                                    }
                                    @if (product.PercentDiscount != 0)
                                    {
                                        <div class="bg-warning rounded-1 px-4 py-1" style="margin-top: 10px; margin-right: 10px">
                                            @product.PercentDiscount %
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="card-body py-4">
                                <h4>@product.Name</h4>
                                <div class="mt-2">@product.Description</div>
                            </div>
                            <div class="card-footer">
                                <div class="d-flex align-items-center">
                                    <div>
                                        @{
                                            var sellingPrice = productSVC.CaculteSellingUnitPrice(product);
                                        }
                                        <span style="font-size: 19px;">@sellingPrice $</span>
                                        @if (product.UnitPrice > sellingPrice)
                                        {
                                            <span class="text-decoration-line-through ms-2" style="color: #959595;">@product.UnitPrice $</span>
                                        }
                                    </div>
                                    <button class="ms-auto btn rounded-1 btn-success px-4">Order</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
        <div class="mt-5 text-center">
            <button class="btn btn-lg btn-primary rounded-1 px-4">Watch more</button>
        </div>
    </div>

}


@code{
    [Parameter]
    public Guid? ProductId { get; set; }

    public ProductDTO? Product { get; set; } = null;

    public IEnumerable<ProductDTO>? RandomProduct { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        if(ProductId != null)
        {
            Product = await productSVC.GetByIdAsync(ProductId.Value);
        }

        RandomProduct = await productSVC.GetRandomAvailableAsync(6);
    }
}
