@page "/orderbycustomer"

@using Customer.DTOs
@using Customer.Services
@inject OrderSVC orderSVC

<div class="container">
    <h3>orderbycustomer</h3>
    @if (orders != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Total</th>
                    <th>Payment Status</th>
                    <th>Delivery Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in orders)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Total</td>
                        <td>@orderSVC.GetPaymentStatus(item.PaymentStatus)</td>
                        <td>@orderSVC.GetDeliveryStatus(item.DeliveryStatus)</td>
                        <td>
                            <a class="btn btn-warning" href="orderdetails/@item.Id">Edit</a> |
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>Loading Product...</p>
    }
</div>


@code {
    IEnumerable<OrderDTO> orders { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    public async Task LoadData()
    {
        orders = await orderSVC.GetAllByCustomer();
    }


}
